name: CI - Application

on:
  pull_request:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        options: >-
           --health-cmd="pg_isready -U $POSTGRES_USER"
           --health-interval=10s
           --health-timeout=5s
           --health-retries=5
    env:
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_SERVER: ${{ secrets.POSTGRES_SERVER }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build services
        run: docker compose build

      - name: Run migrations
        run: docker compose run --rm library-migration

      - name: Create Django superuser
        run: docker compose up -d library-backend library-frontend

      - name: Wait for backend to be ready
        run: |
          echo "Waiting for backend..."
          for i in {1..20}; do
            if curl -s http://localhost:${{ secrets.NEXT_PUBLIC_BACKEND_PORT }}/api/publishing-houses/ > /dev/null; then
              echo "✅ Backend is ready!"
              exit 0
            fi
            echo "⏳ Backend not ready yet... waiting"
            sleep 5
          done
          echo "❌ Backend did not respond in time" && exit 1
      
      - name: Run Playwright tests inside frontend container
        run: docker compose exec library-frontend npm run test

      - name: Stop containers
        if: always()
        run: docker compose down
    
